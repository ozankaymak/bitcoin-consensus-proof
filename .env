# .env example for the Bitcoin Consensus Prover Server

# Bitcoin Core RPC connection details
RPC_URL=http://127.0.0.1:18443
RPC_USER=admin
RPC_PASS=admin

# Path to RocksDB for UTXO set storage
# Default: data/utxo_db_server
ROCKS_DB_PATH_SERVER=data/utxo_db_server

ROCKS_DB_PATH_CLIENT=data/utxo_db_client



# Path to SQLite database for storing proofs
# Default: data/proofs_db_server.sqlite
PROOF_DB_PATH=data/proofs_db_server.sqlite

# Path to the compiled RISC-V guest ELF for Bitcoin consensus
# THIS IS A REQUIRED FIELD and typically located in a target directory after building the guest.
# Example: ../target/riscv32im-risc0-zkvm-elf/release/bitcoin-consensus-guest
GUEST_ELF_PATH=test-elfs/regtest-bitcoin-guest.bin

# Bitcoin network type (e.g., mainnet, testnet, signet, regtest)
# Default: testnet4
BITCOIN_NETWORK=regtest

# Interval in seconds for checking the blockchain tip for new blocks
# Default: 60
TIP_CHECK_INTERVAL_SECS=20

# Target height to catch up to initially.
# If 0 and no previous proofs are found, it will sync to the current chain tip.
# Default: 0
TARGET_CATCHUP_HEIGHT=800

# Maximum size in bytes for a batch of blocks to be processed for proving.
# Default: 10000000 (10MB)
MAX_BATCH_SIZE_BYTES=10000000

# Minimum block height to search backwards for a proof when initializing the server.
# If 0, it will search from the current tip down to genesis or MAX_PROOF_SEARCH_DEPTH.
# Default: 0
MIN_PROOF_SEARCH_HEIGHT=0

# RUST_LOG (Optional - for tracing verbosity, e.g., info, debug, trace)
# This can also be set directly in the environment or managed by your process manager.
# Example: RUST_LOG=info,host::bin::server=debug
RUST_LOG=info

RPC_LISTEN_ADDR=127.0.0.1:17000

CLIENT_SERVER_URL=http://127.0.0.1:17000

CLIENT_GUEST_IMAGE_ID_HEX=308a75ea3e319cdd8a4be89374c8d11bec20df3ea88475f4a4f3bcf3d2d4c78d